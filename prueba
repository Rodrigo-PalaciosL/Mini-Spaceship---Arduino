#include <LiquidCrystal.h> //Librería de la Pantalla LCD

//Definir pines del LCD
const int rs = 10, en = 8, d4 = 7, d5 = 6, d6 = 5, d7 = 4;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);

//Asignar el joystick
const int joystick_Y = A0; //Palanca hacia arriba o abajo (Movimiento en Y)
const int joystick_X = A1; //Palanca izquierda o derecha (Movimiento en X)
const int Ancho = 16; //Ancho de la pantalla lcd

//Estado del juego
char fila0[Ancho]; //Obstáculos en Primera fila
char fila1[Ancho]; //Obstáculos en Segunda fila
int spaceship_X = 1; //Posición de la astronave en las columnas
int spaceship_Y = 0; //Posición de la astronave en las filas
int intervaloJuego = 300; //Tiempo de actualización de escenario
int Difficulty = 6; //Dificultad progresiva con el tiempo
const int DifficultyRange = 7000; //Cada 7 segundos sube la dificultad
int Points = 0; //Acumulador de puntos
int ruptura0 = 0; int ruptura1 = 0; //Lectura para empezar a jugar

//Posiciones y Movimiento del Joystick
unsigned long ultimoPaso = 0;
unsigned long ultimoMovimientoX = 0;
unsigned long ultimoAjuste = 0;
const int intervaloMovimientoX = 150;

void setup() {
  Serial.begin(9600);
  lcd.begin(16,2);
  pinMode(joystick_X, INPUT);
  pinMode(joystick_Y, INPUT);
  randomSeed(analogRead(A3)); //Generación aleatoria
//Pantalla inicial
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("MINI SPACESHIP");
  lcd.setCursor(10,1);
  lcd.print("ARDUINO");
  delay(2000);
  lcd.clear();
  while (true) {
    //Lectura de movimiento para romper bucle
    ruptura0 = analogRead(joystick_X);
    ruptura1 = analogRead(joystick_Y);

    lcd.setCursor(0,0);
    lcd.print("MUÉVETE PARA");
    lcd.setCursor(0,1);
    lcd.print("JUGAR");

    //Rompe bucle al moverse
    if (abs(ruptura0 - 512)>100 || abs(ruptura1 - 512)>100) {
      break;
    }
    delay(100);
  }
//Generación limpia (Sin obstáculos) del escenario
  lcd.clear();
  lcd.setCursor(0,0);
  for (int i=0; i<Ancho; i++) {
    fila0[i] = ' ';
    fila1[i] = ' ';
  }
}

void loop() {
//Leer joystick
  int ValorX = analogRead(joystick_X);
  int ValorY = analogRead(joystick_Y);

//Movimiento por joystick
  if (ValorY < 400) {
    spaceship_Y = 0;
  } else if (ValorY > 600) {
    spaceship_Y = 1;
  } //Para Y

  if (millis() - ultimoMovimientoX > intervaloMovimientoX) {
    if (ValorX < 400 && spaceship_X > 0) {
      spaceship_X--;
      ultimoMovimientoX = millis();
    } else if (ValorX > 600 && Ancho-5 > spaceship_X) {
      spaceship_X++;
      ultimoMovimientoX = millis();
    }
  } //Para X

  lcd.setCursor(spaceship_X,spaceship_Y);
  lcd.print('>'); //Imprimir caracter de la astronave

//---------------------------------------------------------------

  if (millis() - ultimoPaso > intervaloJuego) {
    ultimoPaso = millis();
  //Generación de obstáculos
    int r = random(0, Difficulty);
    if (r == 0) {
      fila0[15] = '#';
      fila1[15] = ' ';
    } else if (r == 1) {
      fila0[15] = ' ';
      fila1[15] = '#';
    } else {
      fila0[15] = ' ';
      fila1[15] = ' ';
    }

//Aumento de Dificultad cada 7 segundos
    if (millis() - ultimoAjuste > DifficultyRange && intervaloJuego > 100) {
        intervaloJuego -= 50; //Aumento de velocidad del Juego
    if (Difficulty > 2) {
      Difficulty -= 1; //Aumento de probabilidad de obstáculos
  }
    ultimoAjuste = millis();
}

  //Movimiento del Escenario
    for (int i=0; i<Ancho-1; i++) {
      fila0[i] = fila0[i+1];
      fila1[i] = fila1[i+1];
    }
    fila0[Ancho-1] = ' ';
    fila1[Ancho-1] = ' ';

// GAME OVER por Colisión con Obstáculo
    if ((spaceship_Y == 0 && fila0[spaceship_X] == '#') ||
    (spaceship_Y == 1 && fila1[spaceship_X] == '#')) {
      lcd.clear();
      lcd.setCursor(3, 0);
      lcd.print("GAME OVER");
      delay(2000);
      lcd.setCursor(0, 1);
      lcd.print("PUNTOS: ");
      lcd.print(Points);

      while (true); // Detener juego
}

//Imprimir Obstáculos
    for (int i = 0; i < Ancho; i++) {
      lcd.setCursor(i, 0);
      lcd.print(fila0[i]);
      lcd.setCursor(i, 1);
      lcd.print(fila1[i]);
    }
    lcd.setCursor(spaceship_X,spaceship_Y);
    lcd.print('>');
  }
